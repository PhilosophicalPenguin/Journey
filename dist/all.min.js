<<<<<<< HEAD
<<<<<<< HEAD
var ProfileModel=Backbone.Model.extend({url:"api/getProfile/",initialize:function(e){console.log("init profile model, this is the model",this),console.log("init profile model, id param is ",e)},parse:function(e){}});window.PositionModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",goToJourney:function(e){console.log("parameter being passed",e),this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("info",e),this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),this.set("info",e),clientRouter.viewJourney(this),console.log("response!!!",e),e}});var PositionsCollection=Backbone.Collection.extend({model:PositionModel,initialize:function(){}});window.DiscoverPathsModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",defaults:{position_name:"",position_image:""},initialize:function(){},goToJourney:function(e){this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("info",e),clientRouter.viewJourney(this),e}}),window.AppModel=Backbone.Model.extend({url:"/api/queryPositions/getPositions",parse:function(e){return this.set("data",e),e},initialize:function(e){var i=new DiscoverPathsModel({position_name:"Corporate Lawyer",position_image:"../assets/lawyer.jpg"}),t=new DiscoverPathsModel({position_name:"Software Engineer",position_image:"../assets/software_engineer.jpg"}),n=new DiscoverPathsModel({position_name:"Nurse Practioner",position_image:"../assets/nurse.jpg"});this.set("discoverPathsCollection",new Backbone.Collection([i,t,n],{model:DiscoverPathsModel}));this.fetch().then(this.positionsReceived.bind(this))},positionsReceived:function(){this.set("positionsCollection",new PositionsCollection(this.get("data"))),console.log("position collection!!!!",this.get("positionsCollection")),this.trigger("positionsReceived")},tellPositionModel:function(e){console.log("this from app model",this)}});var NavBarView=Backbone.View.extend({initialize:function(){},render:function(){return this.$el.children().detach(),this.$el.append('<header class="navbar navbar-static-top" role="navigation"><div class="container"><div class="navbar-header"><a href="#/"><h1>Journey</h1></a></div></div></header>'),this.el}});window.DiscoverPathsView=Backbone.View.extend({tagName:"div",className:"col-md-4",template:_.template("<h3 class=onePath><%=position_name%></h3>"),initialize:function(){this.render()},events:{click:"journeyClickHandler"},journeyClickHandler:function(e){var i=$(e.target).text(),t=this.collection.where({position_name:i});t[0].goToJourney(i)},render:function(){var e=this;return this.collection.each(function(i){e.$el.append(e.template(i.attributes))})}}),window.PositionsCollectionView=Backbone.View.extend({tagName:"ul",className:"positionsList",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append(this.collection.map(function(e){return new PositionView({model:e}).render()}))}}),window.PositionView=Backbone.View.extend({tagName:"li",className:"positionView",template:_.template("<%= position_name %>"),intialize:function(){this.render()},events:{click:"journeyClickHandler"},render:function(){return this.$el.html(this.template(this.model.attributes))},journeyClickHandler:function(e){var i=this.model.get("position_name");this.model.goToJourney(i)}}),window.AutocompleteView=Backbone.View.extend({model:AppModel,el:"#autocomplete",tagName:"input",initialize:function(){console.log("this model",this.model);var e=[];this.listenTo(this.model,"positionsReceived",function(){for(var i in this.model.attributes)null!==this.model.attributes[i].position_name&&void 0!==this.model.attributes[i].position_name&&e.push(this.model.attributes[i].position_name);console.log("listening to positioned received in autocomplete view",e),this.$el.autocomplete({source:e})}),this.render()},events:{keyup:"journeyClickHandler"},journeyClickHandler:function(e){var i=13===e.which;if(i){e.preventDefault();var t=this.$el.val(),n=this.model.get("positionsCollection").where({position_name:t});n[0].goToJourney(t),this.$el.val("")}},render:function(){return $("#autocomplete").html(this.el)}}),window.AppView=Backbone.View.extend({initialize:function(e){this.discoverPathsView=new DiscoverPathsView({collection:this.model.get("discoverPathsCollection")}),this.autocompleteView=new AutocompleteView({model:this.model}),this.render()},render:function(){return this.$el.append(this.discoverPathsView.$el)}}),window.PositionsStatsChartView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var e=[],i=[],t=[];for(var n in this.model)"Software Engineer"===n&&(this.model.total-=this.model[n].length);for(var o in this.model)if("total"!==o&&"Software Engineer"!=o){e.push([o,this.model[o].length/this.model.total*100])}console.log("data before sort:",e),e.sort(function(e,i){return i[1]-e[1]}),console.log("data after sort:",e);for(var s=e.splice(0,10),l=0;l<s.length;++l)i.push(s[l][0]),t.push(s[l][1]);var a=null,r={chart:{renderTo:this.$el,type:"bar",marginLeft:150,style:{fontFamily:"Helvetica, sans-serif"},options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"{point.y:.2f}%"},xAxis:{categories:i,labels:{style:{fontSize:"14px"}}},yAxis:{min:0,lineWidth:0,minorGridLineWidth:0,gridLineWidth:0,lineColor:"transparent",title:{text:"Percentage"}},title:{text:null},plotOptions:{dataLabels:{enabled:!0},series:{groupPadding:.1,cursor:"pointer",point:{events:{click:function(e){console.log(this),a&&a.update({color:"#7cb5ec"},!0,!1),a=this,this.update({color:"#fe5800"})}}}}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(r)}});var ExperienceView=Backbone.View.extend({el:"#experienceDiv",model:PositionModel,className:"ExperienceView",initialize:function(){this.render()},render:function(){this.$el.append("<h3>Experience</h3>"),this.$el.append('<div id="experienceStatsDiv"></div>');{var e=this;new PositionsStatsChartView({el:"#experienceStatsDiv",model:e.model.get("info").positions})}}});window.EducationChartView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var e=[];for(var i in this.model)if("total"!==i){var t=i.replace("_"," in ");"_"===i?e.push(["unlisted",this.model[i].length]):("Other_"===i&&(t="Other"),e.push([t,this.model[i].length]))}e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,10);var n={chart:{type:"pie",options3d:{enabled:!1,alpha:45},style:{fontFamily:"Helvetica, sans-serif"},plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},tooltip:{pointFormat:"{point.percentage:.2f}%"},title:{text:null},plotOptions:{pie:{innerSize:0,depth:45,allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"{point.name}: {point.percentage:.1f}%",color:"#606060",style:{lineHeight:"18px",fontSize:"14px",fontWeight:"normal"}}}},series:[{name:"Percentage",data:e}],credits:{enabled:!1}};this.$el.highcharts(n)}});var EducationView=Backbone.View.extend({el:"#educationDiv",model:PositionModel,className:"EducationView",initialize:function(){this.render()},render:function(){this.$el.append("<h3>Education</h3>"),this.$el.append('<div id="educationStatsDiv"></div>');new EducationChartView({el:"#educationStatsDiv",model:this.model.get("info").degreesAndFields})}});window.SkillsStatsChartView=Backbone.View.extend({initialize:function(){this.render()},render:function(){var e=[],i=[],t=[];for(var n in this.model)"total"!==n&&e.push([n,this.model[n].length]);e.sort(function(e,i){return i[1]-e[1]}),e=e.splice(0,9),i=e.map(function(e){return e[0]}),t=e.map(function(e){return e[1]});var o=null,s={chart:{renderTo:this.$el,type:"bar",marginLeft:150,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"{point.y:.2f}%"},xAxis:{categories:i,labels:{style:{fontSize:"14px"}}},yAxis:{min:0,max:75,lineWidth:0,minorGridLineWidth:0,gridLineWidth:0,lineColor:"transparent",title:{text:"Percentage"}},title:{text:null},plotOptions:{dataLabels:{enabled:!0},series:{groupPadding:.1,cursor:"pointer",point:{events:{click:function(e){console.log(this),o&&o.update({color:"#7cb5ec"},!0,!1),o=this,this.update({color:"#fe5800"})}}}}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(s)}});var SkillsView=Backbone.View.extend({el:"#skillsDiv",model:PositionModel,className:"SkillsView",initialize:function(){this.render()},render:function(){this.$el.append("<h3>Skills</h3>"),this.$el.append('<div id="skillsChartDiv"></div>');new SkillsStatsChartView({el:"#skillsChartDiv",model:this.model.get("info").skills})}});window.JourneyView=Backbone.View.extend({el:"#mainContent",model:PositionModel,className:"JourneyView",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append((new NavBarView).render()),this.$el.append('<div class="container journeyView"><div class="row"><div class="col-md-12 innerJourney"></div></div></div>'),this.$el.find(".innerJourney").append('<div class="sectionTitles"><h2>Destination:</h2><h1>'+this.model.get("position_name")+"</h1></div>"),this.$el.find(".innerJourney").append('<div id="educationDiv"></div>');new EducationView({model:this.model});this.$el.find(".innerJourney").append('<div id="experienceDiv"></div>');new ExperienceView({model:this.model});this.$el.find(".innerJourney").append('<div id="skillsDiv"></div>');new SkillsView({model:this.model})}});var ProfileCardView=Backbone.View.extend({initialize:function(){},render:function(){return this.$el.append("<div> Place picture</div>"),this.$el.append("<div> Place name</div>"),this.$el.append("<div> Place current position</div>"),this.$el.append("<div> Place location</div>"),this.el}}),ProfileView=Backbone.View.extend({el:"#mainContent",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append((new NavBarView).render()),this.$el.append((new ProfileCardView).render())}});window.ClientRouter=Backbone.Router.extend({routes:{"":"home",viewJourney:"viewJourney","profile/:id":"viewProfile"},home:function(){},viewJourney:function(e){$("#mainContent").empty();new JourneyView({model:e})},viewProfile:function(e){var i=new ProfileModel(e);$("#mainContent").empty();new ProfileView({model:i})}});var clientRouter=new ClientRouter;Backbone.history.start();
=======
=======
>>>>>>> minor code polishing
<<<<<<< HEAD
var ProfileModel=Backbone.Model.extend({url:"api/getProfile/",initialize:function(e){console.log("init profile model, this is the model",this),console.log("init profile model, id param is ",e)},parse:function(e){}});window.PositionModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",goToJourney:function(e){console.log("parameter being passed",e),this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("info",e),this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),clientRouter.viewJourney(this),e}});var PositionsCollection=Backbone.Collection.extend({model:PositionModel,initialize:function(){}});window.DiscoverPathsModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",defaults:{position_name:"",position_image:""},initialize:function(){},goToJourney:function(e){this.fetch({data:$.param({name:e})})},parse:function(e){return console.log("got to parse from discoverPathsModel"),this.set("info",e),clientRouter.viewJourney(this),e}}),window.AppModel=Backbone.Model.extend({url:"/api/queryPositions/getPositions",parse:function(e){return this.set("data",e),e},initialize:function(e){var i=new DiscoverPathsModel({position_name:"Corporate Lawyer",position_image:"../assets/lawyer.jpg"}),t=new DiscoverPathsModel({position_name:"Software Engineer",position_image:"../assets/software_engineer.jpg"}),n=new DiscoverPathsModel({position_name:"Nurse Practioner",position_image:"../assets/nurse.jpg"});this.set("discoverPathsCollection",new Backbone.Collection([i,t,n],{model:DiscoverPathsModel}));this.fetch().then(this.positionsReceived.bind(this))},positionsReceived:function(){this.set("positionsCollection",new PositionsCollection(this.get("data"))),this.trigger("positionsReceived")},tellPositionModel:function(e){console.log("this from app model",this)}});var NavBarView=Backbone.View.extend({initialize:function(){},render:function(){return this.$el.children().detach(),this.$el.append('<header class="navbar navbar-static-top" role="navigation"><div class="container"><div class="navbar-header"><a href="#/"><h1>Journey</h1></a></div></div></header>'),this.el}});window.DiscoverPathsView=Backbone.View.extend({tagName:"div",className:"col-md-4",template:_.template("<h3 class=onePath><%=position_name%></h3>"),initialize:function(){this.render()},events:{click:"journeyClickHandler"},journeyClickHandler:function(e){var i=$(e.target).text();console.log("this is the journeyClicked",i);var t=this.collection.where({position_name:i});t[0].goToJourney(i)},render:function(){var e=this;return this.collection.each(function(i){e.$el.append(e.template(i.attributes))})}}),window.PositionsCollectionView=Backbone.View.extend({tagName:"ul",className:"positionsList",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append(this.collection.map(function(e){return new PositionView({model:e}).render()}))}}),window.PositionView=Backbone.View.extend({tagName:"li",className:"positionView",template:_.template("<%= position_name %>"),intialize:function(){this.render()},events:{click:"journeyClickHandler"},render:function(){return this.$el.html(this.template(this.model.attributes))},journeyClickHandler:function(e){var i=this.model.get("position_name");this.model.goToJourney(i)}}),window.AutocompleteView=Backbone.View.extend({model:AppModel,el:"#autocomplete",tagName:"input",initialize:function(){var e=[];this.listenTo(this.model,"positionsReceived",function(){console.log("listening to positioned received in autocomplete view");for(var i in this.model.attributes)null!==this.model.attributes[i].position_name&&void 0!==this.model.attributes[i].position_name&&e.push(this.model.attributes[i].position_name);this.$el.autocomplete({source:e})}),this.render()},events:{keyup:"journeyClickHandler"},journeyClickHandler:function(e){var i=13===e.which;if(i){var t=this.$el.val(),n=this.model.get("positionsCollection").where({position_name:t});n[0].goToJourney(t),this.$el.val("")}},render:function(){return $("#autocomplete").html(this.el)}}),window.AppView=Backbone.View.extend({initialize:function(e){this.discoverPathsView=new DiscoverPathsView({collection:this.model.get("discoverPathsCollection")}),this.autocompleteView=new AutocompleteView({model:this.model}),this.render()},render:function(){return this.$el.append(this.discoverPathsView.$el)}}),window.PositionsStatsChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[],i=[],t=[];for(var n in this.model)"Software Engineer"===n&&(this.model.total-=this.model[n].length);console.log("this model!!!",this.model);for(var o in this.model)if("total"!==o&&"Software Engineer"!=o){e.push([o,this.model[o].length/this.model.total*100])}e.sort(function(e,i){return e[1]<i[1]});for(var s=e.splice(0,10),l=0;l<s.length;++l)i.push(s[l][0]),t.push(s[l][1]);console.log("xAxis categories passed to table:",i),console.log("yAxis percentages passed to table:",t);var a={chart:{renderTo:this.$el,type:"column",margin:150,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,title:{text:"percentage"}},title:{text:"Previous Roles:"},plotOptions:{column:{depth:25}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(a)}});var ExperienceView=Backbone.View.extend({el:"#experienceDiv",model:PositionModel,className:"ExperienceView",initialize:function(){console.log("model from experience view",this.model),this.render()},render:function(){this.$el.append("<h1>Previous Experience</h1>"),this.$el.append('<div id="experienceStatsDiv"></div>');{var e=this;new PositionsStatsChartView({el:"#experienceStatsDiv",model:e.model.get("info").positions})}}});window.EducationChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[];for(var i in this.model)if("total"!==i){var t=i.replace("_"," in ");"_"===i?e.push(["unlisted",this.model[i].length]):("Other_"===i&&(t="Other"),e.push([t,this.model[i].length]))}e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,10),console.log("EDUCATION DATA AFTER SPLICE::::::",e);var n={chart:{type:"pie",options3d:{enabled:!0,alpha:45}},title:{text:"Degrees Obtained:"},plotOptions:{pie:{innerSize:100,depth:45}},series:[{name:"percentage",data:e}]};this.$el.highcharts(n)}});var EducationView=Backbone.View.extend({el:"#educationDiv",model:PositionModel,className:"EducationView",initialize:function(){console.log(this.model),this.render()},render:function(){this.$el.append("<h1>Education</h1>"),this.$el.append('<div id="educationStatsDiv"></div>');new EducationChartView({el:"#educationStatsDiv",model:this.model.get("info").degreesAndFields})}});window.SkillsStatsChartView=Backbone.View.extend({initialize:function(){console.log("initializing skillsChartView"),this.render()},render:function(){console.log("this.model in skills view:",this.model);var e=[],i=[],t=[];for(var n in this.model)"total"!==n&&e.push([n,this.model[n].length]);e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,9),i=e.map(function(e){return e[0]}),t=e.map(function(e){return e[1]}),console.log("skillsNames xAxis passed to chart:",i),console.log("skillsPercentages Axis passed to chart:",t);var o={chart:{renderTo:this.$el,type:"column",margin:150,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,max:75,title:{text:"percentage"}},title:{text:"Current Skills:"},plotOptions:{column:{depth:25}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(o)}});var SkillsView=Backbone.View.extend({el:"#skillsDiv",model:PositionModel,className:"SkillsView",initialize:function(){console.log("initializing skillsView"),this.render()},render:function(){this.$el.append("<h1> Skills </h1>"),this.$el.append('<div id="skillsChartDiv"></div>');new SkillsStatsChartView({el:"#skillsChartDiv",model:this.model.get("info").skills})}});window.JourneyView=Backbone.View.extend({el:"#mainContent",model:PositionModel,className:"JourneyView",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append((new NavBarView).render()),this.$el.append('<div class="container journeyView"><div class="row"><div class="col-md-12 innerJourney"></div></div></div>'),this.$el.find(".innerJourney").append('<div class="sectionTitles"><h2>Destination:</h2><h1>'+this.model.get("position_name")+"</h1></div>"),this.$el.find(".innerJourney").append('<div id="experienceDiv"></div>');new ExperienceView({model:this.model});this.$el.find(".innerJourney").append('<div id="educationDiv"></div>');new EducationView({model:this.model});this.$el.find(".innerJourney").append('<div id="skillsDiv"></div>');new SkillsView({model:this.model})}});var ProfileCardView=Backbone.View.extend({initialize:function(){},render:function(){return this.$el.append("<div> Place picture</div>"),this.$el.append("<div> Place name</div>"),this.$el.append("<div> Place current position</div>"),this.$el.append("<div> Place location</div>"),this.el}}),ProfileView=Backbone.View.extend({el:"#mainContent",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append((new NavBarView).render()),this.$el.append((new ProfileCardView).render())}});window.ClientRouter=Backbone.Router.extend({routes:{"":"home",viewJourney:"viewJourney","profile/:id":"viewProfile"},home:function(){console.log("in home view - called from router")},viewJourney:function(e){$("#mainContent").empty();new JourneyView({model:e})},viewProfile:function(e){console.log("hello woo!");var i=new ProfileModel(e);$("#mainContent").empty();new ProfileView({model:i})}});var clientRouter=new ClientRouter;Backbone.history.start();
=======
window.PositionModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",goToJourney:function(e){console.log("parameter being passed",e),this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("info",e),this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),clientRouter.viewJourney(this),e}});var PositionsCollection=Backbone.Collection.extend({model:PositionModel,initialize:function(){}});window.DiscoverPathsModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",defaults:{position_name:"",position_image:""},initialize:function(){},goToJourney:function(e){this.fetch({data:$.param({name:e})})},parse:function(e){return console.log("got to parse from discoverPathsModel"),this.set("info",e),clientRouter.viewJourney(this),e}}),window.AppModel=Backbone.Model.extend({url:"/api/queryPositions/getPositions",parse:function(e){return this.set("data",e),e},initialize:function(e){var i=new DiscoverPathsModel({position_name:"Corporate Lawyer",position_image:"../assets/lawyer.jpg"}),t=new DiscoverPathsModel({position_name:"Software Engineer",position_image:"../assets/software_engineer.jpg"}),n=new DiscoverPathsModel({position_name:"Nurse Practioner",position_image:"../assets/nurse.jpg"});this.set("discoverPathsCollection",new Backbone.Collection([i,t,n],{model:DiscoverPathsModel}));this.fetch().then(this.positionsReceived.bind(this))},positionsReceived:function(){this.set("positionsCollection",new PositionsCollection(this.get("data"))),this.trigger("positionsReceived")},tellPositionModel:function(e){console.log("this from app model",this)}}),window.DiscoverPathsView=Backbone.View.extend({tagName:"div",className:"col-md-4",template:_.template("<h3 class=onePath><%=position_name%></h3>"),initialize:function(){this.render()},events:{click:"journeyClickHandler"},journeyClickHandler:function(e){var i=$(e.target).text();console.log("this is the journeyClicked",i);var t=this.collection.where({position_name:i});t[0].goToJourney(i)},render:function(){var e=this;return this.collection.each(function(i){e.$el.append(e.template(i.attributes))})}}),window.PositionsCollectionView=Backbone.View.extend({tagName:"ul",className:"positionsList",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append(this.collection.map(function(e){return new PositionView({model:e}).render()}))}}),window.PositionView=Backbone.View.extend({tagName:"li",className:"positionView",template:_.template("<%= position_name %>"),intialize:function(){this.render()},events:{click:"journeyClickHandler"},render:function(){return this.$el.html(this.template(this.model.attributes))},journeyClickHandler:function(e){var i=this.model.get("position_name");this.model.goToJourney(i)}}),window.AutocompleteView=Backbone.View.extend({model:AppModel,el:"#autocomplete",tagName:"input",initialize:function(){var e=[];this.listenTo(this.model,"positionsReceived",function(){console.log("listening to positioned received in autocomplete view");for(var i in this.model.attributes)null!==this.model.attributes[i].position_name&&void 0!==this.model.attributes[i].position_name&&e.push(this.model.attributes[i].position_name);this.$el.autocomplete({source:e})}),this.render()},events:{keyup:"journeyClickHandler"},journeyClickHandler:function(e){var i=13===e.which;if(i){var t=this.$el.val(),n=this.model.get("positionsCollection").where({position_name:t});n[0].goToJourney(t),this.$el.val("")}},render:function(){return $("#autocomplete").html(this.el)}}),window.AppView=Backbone.View.extend({initialize:function(e){this.discoverPathsView=new DiscoverPathsView({collection:this.model.get("discoverPathsCollection")}),this.autocompleteView=new AutocompleteView({model:this.model}),this.render()},render:function(){return this.$el.append(this.discoverPathsView.$el)}}),window.PositionsStatsChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[],i=[],t=[];for(var n in this.model)"Software Engineer"===n&&(this.model.total-=this.model[n].length);console.log("this model!!!",this.model);for(var o in this.model)if("total"!==o&&"Software Engineer"!=o){e.push([o,this.model[o].length/this.model.total*100])}e.sort(function(e,i){return e[1]<i[1]});for(var s=e.splice(0,10),l=0;l<s.length;++l)i.push(s[l][0]),t.push(s[l][1]);console.log("xAxis categories passed to table:",i),console.log("yAxis percentages passed to table:",t);var a={chart:{renderTo:this.$el,type:"bar",margin:100,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,title:{text:"percentage"}},title:{text:"Previous Roles:"},plotOptions:{dataLabels:{enabled:!0},series:{point:{events:{click:function(){console.log("series clicked")}}}}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(a)}});var ExperienceView=Backbone.View.extend({el:"#experienceDiv",model:PositionModel,className:"ExperienceView",initialize:function(){console.log("model from experience view",this.model),this.render()},render:function(){this.$el.append("<h1>Previous Experience</h1>"),this.$el.append('<div id="experienceStatsDiv"></div>');{var e=this;new PositionsStatsChartView({el:"#experienceStatsDiv",model:e.model.get("info").positions})}}});window.EducationChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[];for(var i in this.model)if("total"!==i){var t=i.replace("_"," in ");"_"===i?e.push(["unlisted",this.model[i].length]):("Other_"===i&&(t="Other"),e.push([t,this.model[i].length]))}e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,10),console.log("EDUCATION DATA AFTER SPLICE::::::",e);var n={chart:{type:"pie",options3d:{enabled:!0,alpha:45}},title:{text:"Degrees Obtained:"},plotOptions:{pie:{innerSize:100,depth:45}},series:[{name:"percentage",data:e}]};this.$el.highcharts(n)}});var EducationView=Backbone.View.extend({el:"#educationDiv",model:PositionModel,className:"EducationView",initialize:function(){console.log(this.model),this.render()},render:function(){this.$el.append("<h1>Education</h1>"),this.$el.append('<div id="educationStatsDiv"></div>');new EducationChartView({el:"#educationStatsDiv",model:this.model.get("info").degreesAndFields})}});window.SkillsStatsChartView=Backbone.View.extend({initialize:function(){console.log("initializing skillsChartView"),this.render()},render:function(){console.log("this.model in skills view:",this.model);var e=[],i=[],t=[];for(var n in this.model)"total"!==n&&e.push([n,this.model[n].length]);e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,9),i=e.map(function(e){return e[0]}),t=e.map(function(e){return e[1]}),console.log("skillsNames xAxis passed to chart:",i),console.log("skillsPercentages Axis passed to chart:",t);var o={chart:{renderTo:this.$el,type:"column",margin:150,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,max:75,title:{text:"percentage"}},title:{text:"Current Skills:"},plotOptions:{column:{depth:25}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(o)}});var SkillsView=Backbone.View.extend({el:"#skillsDiv",model:PositionModel,className:"SkillsView",initialize:function(){console.log("initializing skillsView"),this.render()},render:function(){this.$el.append("<h1> Skills </h1>"),this.$el.append('<div id="skillsChartDiv"></div>');new SkillsStatsChartView({el:"#skillsChartDiv",model:this.model.get("info").skills})}});window.JourneyView=Backbone.View.extend({el:"#mainContent",model:PositionModel,className:"JourneyView",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append('<header class="navbar navbar-static-top" role="navigation"><div class="container"><div class="navbar-header"><a href="#/"><h1>Journey</h1></a></div></div></header>'),this.$el.append('<div class="container journeyView"><div class="row"><div class="col-md-12 innerJourney"></div></div></div>'),this.$el.find(".innerJourney").append('<div class="sectionTitles"><h2>Destination:</h2><h1>'+this.model.get("position_name")+"</h1></div>"),this.$el.find(".innerJourney").append('<div id="experienceDiv"></div>');new ExperienceView({model:this.model});this.$el.find(".innerJourney").append('<div id="educationDiv"></div>');new EducationView({model:this.model});this.$el.find(".innerJourney").append('<div id="skillsDiv"></div>');new SkillsView({model:this.model})}}),window.ClientRouter=Backbone.Router.extend({routes:{"":"home",viewJourney:"viewJourney"},home:function(){console.log("in home view - called from router")},viewJourney:function(e){$("#mainContent").empty();new JourneyView({model:e})}});var clientRouter=new ClientRouter;Backbone.history.start();
>>>>>>> Bars now respond to click
<<<<<<< HEAD
>>>>>>> Bars now respond to click
=======
=======
window.PositionModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",goToJourney:function(e){console.log("parameter being passed",e),this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("info",e),this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),clientRouter.viewJourney(this),e}});var PositionsCollection=Backbone.Collection.extend({model:PositionModel,initialize:function(){}});window.DiscoverPathsModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",defaults:{position_name:"",position_image:""},initialize:function(){},goToJourney:function(e){this.fetch({data:$.param({name:e})})},parse:function(e){return console.log("got to parse from discoverPathsModel"),this.set("info",e),clientRouter.viewJourney(this),e}}),window.AppModel=Backbone.Model.extend({url:"/api/queryPositions/getPositions",parse:function(e){return this.set("data",e),e},initialize:function(e){var i=new DiscoverPathsModel({position_name:"Corporate Lawyer",position_image:"../assets/lawyer.jpg"}),t=new DiscoverPathsModel({position_name:"Software Engineer",position_image:"../assets/software_engineer.jpg"}),o=new DiscoverPathsModel({position_name:"Nurse Practioner",position_image:"../assets/nurse.jpg"});this.set("discoverPathsCollection",new Backbone.Collection([i,t,o],{model:DiscoverPathsModel}));this.fetch().then(this.positionsReceived.bind(this))},positionsReceived:function(){this.set("positionsCollection",new PositionsCollection(this.get("data"))),this.trigger("positionsReceived")},tellPositionModel:function(e){console.log("this from app model",this)}}),window.DiscoverPathsView=Backbone.View.extend({tagName:"div",className:"col-md-4",template:_.template("<h3 class=onePath><%=position_name%></h3>"),initialize:function(){this.render()},events:{click:"journeyClickHandler"},journeyClickHandler:function(e){var i=$(e.target).text();console.log("this is the journeyClicked",i);var t=this.collection.where({position_name:i});t[0].goToJourney(i)},render:function(){var e=this;return this.collection.each(function(i){e.$el.append(e.template(i.attributes))})}}),window.PositionsCollectionView=Backbone.View.extend({tagName:"ul",className:"positionsList",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append(this.collection.map(function(e){return new PositionView({model:e}).render()}))}}),window.PositionView=Backbone.View.extend({tagName:"li",className:"positionView",template:_.template("<%= position_name %>"),intialize:function(){this.render()},events:{click:"journeyClickHandler"},render:function(){return this.$el.html(this.template(this.model.attributes))},journeyClickHandler:function(e){var i=this.model.get("position_name");this.model.goToJourney(i)}}),window.AutocompleteView=Backbone.View.extend({model:AppModel,el:"#autocomplete",tagName:"input",initialize:function(){var e=[];this.listenTo(this.model,"positionsReceived",function(){console.log("listening to positioned received in autocomplete view");for(var i in this.model.attributes)null!==this.model.attributes[i].position_name&&void 0!==this.model.attributes[i].position_name&&e.push(this.model.attributes[i].position_name);this.$el.autocomplete({source:e})}),this.render()},events:{keyup:"journeyClickHandler"},journeyClickHandler:function(e){var i=13===e.which;if(i){var t=this.$el.val(),o=this.model.get("positionsCollection").where({position_name:t});o[0].goToJourney(t),this.$el.val("")}},render:function(){return $("#autocomplete").html(this.el)}}),window.AppView=Backbone.View.extend({initialize:function(e){this.discoverPathsView=new DiscoverPathsView({collection:this.model.get("discoverPathsCollection")}),this.autocompleteView=new AutocompleteView({model:this.model}),this.render()},render:function(){return this.$el.append(this.discoverPathsView.$el)}}),window.PositionsStatsChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[],i=[],t=[];for(var o in this.model)"Software Engineer"===o&&(this.model.total-=this.model[o].length);console.log("this model!!!",this.model);for(var n in this.model)if("total"!==n&&"Software Engineer"!=n){e.push([n,this.model[n].length/this.model.total*100])}e.sort(function(e,i){return e[1]<i[1]});for(var s=e.splice(0,10),l=0;l<s.length;++l)i.push(s[l][0]),t.push(s[l][1]);console.log("xAxis categories passed to table:",i),console.log("yAxis percentages passed to table:",t);var a=null,r={chart:{renderTo:this.$el,type:"bar",margin:100,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,title:{text:"percentage"}},title:{text:"Previous Roles:"},plotOptions:{dataLabels:{enabled:!0},series:{point:{events:{click:function(e){console.log(this),a&&a.update({color:"#7cb5ec"},!0,!1),a=this,this.update({color:"#fe5800"})}}}}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(r)}});var ExperienceView=Backbone.View.extend({el:"#experienceDiv",model:PositionModel,className:"ExperienceView",initialize:function(){console.log("model from experience view",this.model),this.render()},render:function(){this.$el.append("<h1>Previous Experience</h1>"),this.$el.append('<div id="experienceStatsDiv"></div>');{var e=this;new PositionsStatsChartView({el:"#experienceStatsDiv",model:e.model.get("info").positions})}}});window.EducationChartView=Backbone.View.extend({initialize:function(){console.log(this.model),this.render()},render:function(){var e=[];for(var i in this.model)if("total"!==i){var t=i.replace("_"," in ");"_"===i?e.push(["unlisted",this.model[i].length]):("Other_"===i&&(t="Other"),e.push([t,this.model[i].length]))}e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,10),console.log("EDUCATION DATA AFTER SPLICE::::::",e);var o={chart:{type:"pie",options3d:{enabled:!0,alpha:45}},title:{text:"Degrees Obtained:"},plotOptions:{pie:{innerSize:100,depth:45}},series:[{name:"percentage",data:e}]};this.$el.highcharts(o)}});var EducationView=Backbone.View.extend({el:"#educationDiv",model:PositionModel,className:"EducationView",initialize:function(){console.log(this.model),this.render()},render:function(){this.$el.append("<h1>Education</h1>"),this.$el.append('<div id="educationStatsDiv"></div>');new EducationChartView({el:"#educationStatsDiv",model:this.model.get("info").degreesAndFields})}});window.SkillsStatsChartView=Backbone.View.extend({initialize:function(){console.log("initializing skillsChartView"),this.render()},render:function(){console.log("this.model in skills view:",this.model);var e=[],i=[],t=[];for(var o in this.model)"total"!==o&&e.push([o,this.model[o].length]);e.sort(function(e,i){return e[1]<i[1]}),e=e.splice(0,9),i=e.map(function(e){return e[0]}),t=e.map(function(e){return e[1]}),console.log("skillsNames xAxis passed to chart:",i),console.log("skillsPercentages Axis passed to chart:",t);var n={chart:{renderTo:this.$el,type:"column",margin:150,options3d:{enabled:!1,alpha:15,beta:15,depth:50,viewDistance:25}},tooltip:{pointFormat:"Value: {point.y:.2f} %"},xAxis:{categories:i},yAxis:{min:0,max:75,title:{text:"percentage"}},title:{text:"Current Skills:"},plotOptions:{column:{depth:25}},series:[{showInLegend:!1,data:t}],credits:{enabled:!1}};this.$el.highcharts(n)}});var SkillsView=Backbone.View.extend({el:"#skillsDiv",model:PositionModel,className:"SkillsView",initialize:function(){console.log("initializing skillsView"),this.render()},render:function(){this.$el.append("<h1> Skills </h1>"),this.$el.append('<div id="skillsChartDiv"></div>');new SkillsStatsChartView({el:"#skillsChartDiv",model:this.model.get("info").skills})}});window.JourneyView=Backbone.View.extend({el:"#mainContent",model:PositionModel,className:"JourneyView",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append('<header class="navbar navbar-static-top" role="navigation"><div class="container"><div class="navbar-header"><a href="#/"><h1>Journey</h1></a></div></div></header>'),this.$el.append('<div class="container journeyView"><div class="row"><div class="col-md-12 innerJourney"></div></div></div>');var e=new AutocompleteView;console.log("new autocomplete view",e),this.$el.find("navbar navbar-static-top").append(e),this.$el.find(".innerJourney").append('<div class="sectionTitles"><h2>Destination:</h2><h1>'+this.model.get("position_name")+"</h1></div>"),this.$el.find(".innerJourney").append('<div id="experienceDiv"></div>');new ExperienceView({model:this.model});this.$el.find(".innerJourney").append('<div id="educationDiv"></div>');new EducationView({model:this.model});this.$el.find(".innerJourney").append('<div id="skillsDiv"></div>');new SkillsView({model:this.model})}}),window.ClientRouter=Backbone.Router.extend({routes:{"":"home",viewJourney:"viewJourney"},home:function(){console.log("in home view - called from router")},viewJourney:function(e){$("#mainContent").empty();new JourneyView({model:e})}});var clientRouter=new ClientRouter;Backbone.history.start();
>>>>>>> minor code polishing
>>>>>>> minor code polishing
