window.PositionModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",goToJourney:function(e){this.fetch({data:$.param({name:e})})},parse:function(e){return this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),clientRouter.viewJourney(this),e}});var PositionsCollection=Backbone.Collection.extend({model:PositionModel,initialize:function(){}});window.DiscoverPathsModel=Backbone.Model.extend({url:"/api/queryPositions/getStats",defaults:{position_name:"",position_image:""},initialize:function(){console.log(this)},goToJourney:function(e){console.log("got to goToJourney from discoverPathsModel"),console.log(this.fetch({data:$.param({name:e})}))},parse:function(e){return console.log("got to parse from discoverPathsModel"),this.set("degrees",e.degrees),this.set("fieldsOfStudy",e.fieldsOfStudy),this.set("degreesAndFields",e.degreesAndFields),clientRouter.viewJourney(this),e}}),window.AppModel=Backbone.Model.extend({url:"/api/queryPositions/getPositions",parse:function(e){return this.set("data",e),e},initialize:function(e){var t=new DiscoverPathsModel({position_name:"Corporate Lawyer",position_image:"../assets/lawyer.jpg"}),i=new DiscoverPathsModel({position_name:"Software Engineer",position_image:"../assets/software_engineer.jpg"}),o=new DiscoverPathsModel({position_name:"Nurse Practioner",position_image:"../assets/nurse.jpg"});this.set("discoverPathsCollection",new Backbone.Collection([t,i,o],{model:DiscoverPathsModel}));this.fetch().then(this.positionsReceived.bind(this))},positionsReceived:function(){this.set("positionsCollection",new PositionsCollection(this.get("data"))),this.trigger("positionsReceived")}}),window.DiscoverPathsView=Backbone.View.extend({tagName:"div",className:"col-md-4",template:_.template("<h3 class=onePath><%=position_name%></h3>"),initialize:function(){this.render()},events:{click:"journeyClickHandler"},journeyClickHandler:function(e){var t=$(e.target).text();console.log("this is the journeyClicked",t);var i=this.collection.where({position_name:t});i[0].goToJourney(t)},render:function(){var e=this;return this.collection.each(function(t){e.$el.append(e.template(t.attributes))})}}),window.PositionsCollectionView=Backbone.View.extend({tagName:"ul",className:"positionsList",initialize:function(){this.render()},render:function(){this.$el.children().detach(),this.$el.append(this.collection.map(function(e){return new PositionView({model:e}).render()}))}}),window.PositionView=Backbone.View.extend({tagName:"li",className:"positionView",template:_.template("<%= position_name %>"),intialize:function(){this.render()},events:{click:"journeyClickHandler"},render:function(){return this.$el.html(this.template(this.model.attributes))},journeyClickHandler:function(e){var t=this.model.get("position_name");this.model.goToJourney(t)}}),window.AppView=Backbone.View.extend({initialize:function(e){this.discoverPathsView=new DiscoverPathsView({collection:this.model.get("discoverPathsCollection")}),this.render()},render:function(){return this.$el.append(this.discoverPathsView.$el)}}),window.StatsTableView=Backbone.View.extend({model:PositionModel,tagName:"table",className:"table",template:_.template("<tr><td><%=item.percentage%> have a <%=item.name%> or higher, </td></tr>"),initialize:function(e,t){console.log("POSITION MODEL from statstableview",this.model),this.settings=t,console.log("options woo!",t),this.render()},render:function(){var e=this.settings.field,t=[],i=this.model.get(e);for(var o in i)if("total"!==o){var n={};n.name=o,n.percentage=i[o]/i.total*100+"%",t.push(n)}var s=this;t.forEach(function(e){return s.$el.append(s.template({item:e}))})}}),window.JourneyView=Backbone.View.extend({model:PositionModel,className:"JourneyView",template:_.template("<tr><td><%=degree.percentage%> have a <%=degree.name%> or higher, </td></tr>"),initialize:function(){this.render()},render:function(){var e=new StatsTableView({model:this.model},{field:"degreesAndFields"});this.$el.append(["<th>For the position</th>"+this.model.get("title"),e.$el])}}),window.ClientRouter=Backbone.Router.extend({routes:{"":"home","viewJourney/:id":"viewJourney"},home:function(){console.log("in home view - called from router")},viewJourney:function(e){console.log("got to viewJourney on clientRouter");var t=new JourneyView({model:e});$(".mainContent").html(t.el)}});var clientRouter=new ClientRouter;Backbone.history.start();